name: seiri_test

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  main:
    name: Test Seiri on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          coverage run -m pytest  -v -s

      - name: Generate Coverage Report
        run: |
          coverage report -m
            coverage html -d ${{ matrix.os }}-${{ matrix.python-version }}

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload Page Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          name: artifact-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./${{ matrix.os }}-${{ matrix.python-version }}

  merge-artifacts:
    name: Merge Artifacts
    runs-on: ubuntu-latest
    needs: main

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Merge Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: artifacts
      #     path: ./artifacts

  # deploy:
  #   needs: main
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11", "3.12"]
  #       os: [ubuntu-latest, macOS-latest, windows-latest]

  #   permissions:
  #     pages: write
  #     id-token: write

  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   steps:
  #     - name: Checkout this repository
  #       uses: actions/checkout@v4

  #     - name: Deploy Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
  #       with:
  #         artifact_name: artifact-${{ matrix.os }}-${{ matrix.python-version }}
